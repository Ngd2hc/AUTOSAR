/** @file     Rte_Type.h
  * 
  * @brief    RTE type definitions
  * 
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  * 
  * @note     Generated by ETAS GmbH  RTA-RTE v5.8.4  (R4.0 backend version: v7.8.7 (Build 46772))
  * 
  * @date     Thu Jan 25 14:23:35 2018
  */

#ifndef RTE_TYPE_H
#define RTE_TYPE_H

#include "Rte.h"
#include "Rte_Cfg.h"

/*******************************************************
 ***
 *** Forward Declarations
 ***
 *******************************************************/

struct Rte_CDS_App_swc1;
struct Rte_CDS_App_swc2;
struct Rte_CDS_ECU_ABS;
struct Rte_CDS_Sensor_swc;

/*******************************************************
 ***
 *** Types
 ***
 *******************************************************/

/* Information: No typedef for ImplementationDataType boolean because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType float32 because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType float64 because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType sint16 because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType sint32 because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType sint64 because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType sint8 because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType uint32 because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType uint64 because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType uint8 because the SwBaseType.nativeDeclaration is empty. */

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Sensor_swc_CS_IF_TEST_cs_test) (VAR(uint8, AUTOMATIC) test_1, CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) test_2);

typedef P2FUNC(VAR(uint8, AUTOMATIC), RTE_CODE, Rte_DReadFP_App_swc2_SR_IF_TEST_sr_test) (void);

typedef P2FUNC(VAR(uint8, AUTOMATIC), RTE_CODE, Rte_IrvReadFP_Sensor_swc_RE_sensor_2_Explicit_VariableDataPrototype_0) (void);

typedef P2FUNC(void, RTE_CODE, Rte_IrvWriteFP_Sensor_swc_RE_sensor_1_Explicit_VariableDataPrototype_0) (VAR(uint8, AUTOMATIC) data);

typedef CONSTP2CONST(struct Rte_CDS_App_swc1,AUTOMATIC,RTE_CONST) Rte_SelfType_App_swc1;

typedef CONSTP2CONST(struct Rte_CDS_App_swc2,AUTOMATIC,RTE_CONST) Rte_SelfType_App_swc2;

typedef CONSTP2CONST(struct Rte_CDS_ECU_ABS,AUTOMATIC,RTE_CONST) Rte_SelfType_ECU_ABS;

typedef CONSTP2CONST(struct Rte_CDS_Sensor_swc,AUTOMATIC,RTE_CONST) Rte_SelfType_Sensor_swc;

typedef P2FUNC(void, RTE_CODE, Rte_TriggerFP_Sensor_swc_TR_IF_TEST_tr_test) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Sensor_swc_SR_IF_TEST_sr_test) (VAR(uint8, AUTOMATIC) data);

#endif /* !RTE_TYPE_H */
