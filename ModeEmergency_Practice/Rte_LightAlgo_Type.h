/** @file     Rte_LightAlgo_Type.h
  * 
  * @brief    Application types header file
  * 
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  * 
  * @note     Generated by ETAS GmbH  RTA-RTE v5.8.4  (R4.0 backend version: v7.8.7 (Build 46772))
  * 
  * @date     Thu Jan 25 11:18:33 2018
  */

#ifndef RTE_LightAlgo_TYPE_H
#define RTE_LightAlgo_TYPE_H

#include "Rte_Type.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/* BEGIN: SWC specific types */
#ifndef RTE_CORE
#ifndef RTE_MODETYPE_EMERGENCYMODEDECLARATIONGROUP
#define RTE_MODETYPE_EMERGENCYMODEDECLARATIONGROUP
typedef uint8 Rte_ModeType_EmergencyModeDeclarationGroup;
#endif

#endif /* RTE_CORE */

/* END: SWC specific types */

/* BEGIN: SWC specific definitions */
#ifndef RTE_CORE
#ifndef OFF
#define OFF                                              0
#endif /*OFF*/
#ifndef ON
#define ON                                               1
#endif /*ON*/
#ifndef RTE_MODE_EmergencyModeDeclarationGroup_Emergency
#define RTE_MODE_EmergencyModeDeclarationGroup_Emergency 0U
#endif /*RTE_MODE_EmergencyModeDeclarationGroup_Emergency*/
#ifndef RTE_MODE_EmergencyModeDeclarationGroup_Normal
#define RTE_MODE_EmergencyModeDeclarationGroup_Normal    1U
#endif /*RTE_MODE_EmergencyModeDeclarationGroup_Normal*/
#ifndef RTE_TRANSITION_EmergencyModeDeclarationGroup
#define RTE_TRANSITION_EmergencyModeDeclarationGroup     2U
#endif /*RTE_TRANSITION_EmergencyModeDeclarationGroup*/
#define STATE_LIGHT_LowerLimit                           ((STATE_LIGHT)0)
#define STATE_LIGHT_UpperLimit                           ((STATE_LIGHT)1)
#endif /* RTE_CORE */

/* END: SWC specific definitions */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !RTE_LightAlgo_TYPE_H */
